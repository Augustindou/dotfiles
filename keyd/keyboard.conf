# This config remaps my Framework 13 belgian keyboard to interact in a similar way
# to a MacOS keyboard.
#
# DISCLAIMER: This config is specific to the belgian keyboard because keyd
# handles keycodes, and these keycodes are named after the characters on a US
# qwerty keyboard.
#
# To adapt or reproduce, you have to put
# <name of typed key> = <name of keys to type to produce result>
# To identify the names of the keys, use `$ sudo keyd monitor`.

[ids]
*

# ------------------
# --- Main layer ---
# ------------------
[main]

# skip caps lock
capslock = esc

# layers
leftalt = layer(cmd)
leftmeta = layer(option)

# at symbol
` = G-2

# backtick
\ = macro(G-\ space)



# -------------------
# --- Shift layer ---
# -------------------
[shift]

# number sign (#)
` = G-3



# ---------------------
# --- Command layer ---
# ---------------------
[cmd:C]

# cmd+space opens app launcher
space = M-space

# switch between tabs
1 = A-1
2 = A-2
3 = A-3
4 = A-4
5 = A-5
6 = A-6
7 = A-7
8 = A-8
9 = A-9

# text navigation
left = home
right = end
backspace = macro(S-home backspace)



# --------------------
# --- Option layer ---
# --------------------
[option:G]

# text navigation
left = C-left
right = C-right
backspace = C-backspace

# euro sign
] = G-e

# curly braces
5 = G-9
- = G-0

# tilde (input dead tilde & space)
n = macro(G-/ space)

# don't break meta-numbers to switch between hyprland spaces
1 = M-1
2 = M-2
3 = M-3
4 = M-4
5 = M-5
6 = M-6
7 = M-7
8 = M-8
9 = M-9

# -----------------------
# --- Combined layers ---
# -----------------------

[option+shift:M-S]
# brackets
5 = G-[
- = G-]
# vertical line
l = G-1
# backslash
. = G-102nd

# screenshots
[cmd+shift]
4 = print
5 = S-print

# 1password
[cmd+shift]
space = C-S-space

# ------------------------
# --- Switching states ---
# ------------------------

# cmd + tab = alt + tab
[cmd:C]
tab = swapm(app_switch_state, A-tab)

[app_switch_state:A]
tab = A-tab
right = A-tab
left = A-S-tab

# option + tab = ctrl + tab
[option:G]
tab = swapm(tab_switch_state, C-tab)

[tab_switch_state:C]
tab = C-tab
right = C-tab
left = C-S-tab






